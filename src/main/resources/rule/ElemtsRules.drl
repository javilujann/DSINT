//created on: Oct 23, 2025
package rule

//list any import classes here.
import elem.Ciclo
import componentes.*


//declare any global variables here




rule "Creacion de Intervalo PR"

    when
      $ciclo : Ciclo(
      	intervaloPR == null,
      	getOnda(OndaTipo.P).isPresent(),
        getOnda(OndaTipo.Q).isPresent()
      ) 
    then
        Onda ondaP = $ciclo.getOnda(OndaTipo.P).get();
        Onda ondaQ = $ciclo.getOnda(OndaTipo.Q).get();
        
        float _inicio = ondaP.getInicio();
        float _final = ondaQ.getInicio();
        IntervaloPR intervalo = new IntervaloPR(0,_inicio, _final);
    	
        modify($ciclo){
        	setIntervaloPR(intervalo);
        }
end

rule "Creacion de Segmento PR"

    when
      $ciclo : Ciclo(
      	segmentoPR == null,
      	getOnda(OndaTipo.P).isPresent(),
        getOnda(OndaTipo.Q).isPresent()
      ) 
    then
        Onda ondaP = $ciclo.getOnda(OndaTipo.P).get();
        Onda ondaQ = $ciclo.getOnda(OndaTipo.Q).get();
        
        float _inicio = ondaP.getFin();
        float _final = ondaQ.getInicio();
        SegmentoPR segmento = new SegmentoPR(0,_inicio, _final);
    	
        modify($ciclo){
        	setSegmentoPR(segmento);
        }
end

rule "Creacion de ComplejoQRS"

    when
      $ciclo : Ciclo(
      	segmentoPR == null,
      	getOnda(OndaTipo.S).isPresent(),
        getOnda(OndaTipo.Q).isPresent()
      ) 
    then
        Onda ondaS = $ciclo.getOnda(OndaTipo.S).get();
        Onda ondaQ = $ciclo.getOnda(OndaTipo.Q).get();
        
        float _inicio = ondaQ.getInicio();
        float _final = ondaS.getFin();
        ComplejoQRS complejo = new ComplejoQRS(_inicio, _final,0);
    	
        modify($ciclo){
        	setComplejoQRS(complejo);
        }
end

rule "Creacion de Segmento ST"

    when
      $ciclo : Ciclo(
      	segmentoST == null,
      	getOnda(OndaTipo.S).isPresent(),
        getOnda(OndaTipo.T).isPresent()
      ) 
    then
        Onda ondaS = $ciclo.getOnda(OndaTipo.S).get();
        Onda ondaT = $ciclo.getOnda(OndaTipo.T).get();
        
        float _inicio = ondaS.getFin();
        float _final = ondaT.getInicio();
        SegmentoST segmento = new SegmentoST(0,_inicio, _final,);
    	
        modify($ciclo){
        	setSegmentoST(segmento);
        }
end

rule "Creacion de Intervalo QT"

    when
      $ciclo : Ciclo(
      	intervaloPR == null,
      	getOnda(OndaTipo.T).isPresent(),
        getOnda(OndaTipo.Q).isPresent()
      ) 
    then
        Onda ondaT = $ciclo.getOnda(OndaTipo.T).get();
        Onda ondaQ = $ciclo.getOnda(OndaTipo.Q).get();
        
        float _inicio = ondaQ.getInicio();
        float _final = ondaT.getFin();
        IntervaloQT intervalo = new IntervaloQT(0,_inicio, _final);
    	
        modify($ciclo){
        	setIntervaloQT(intervalo);
        }
end

rule "Calcular Frecuencia Cardiaca"
	when 
		$ECG : ECG()
	then 
		int numeroCiclos = $ECG.getCiclos();
		frecuencia = (numeroCiclos * 60) / $ECG.getFin();
		modify($ECG){
			setFrecuencia(frecuencia)
		}
end



